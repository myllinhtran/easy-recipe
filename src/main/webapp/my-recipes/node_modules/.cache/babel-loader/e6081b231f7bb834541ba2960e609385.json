{"ast":null,"code":"var _jsxFileName = \"/Users/Linh/Documents/programmar/Project/recipe/src/main/webapp/my-recipes/src/components/Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport \"./css/Homepage.css\";\nimport Baked from \"./img/lm4rceme60edquisbnwb.jpeg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDumbbell, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Homepage() {\n  _s();\n\n  // Store the recipes in a state variable.\n  // We are passing an empty array as the default value.\n  const [recipes, setRecipes] = useState([{\n    id: '',\n    title: '',\n    meal: '',\n    difficulty: '',\n    steps: ''\n  }]);\n\n  const iconMeal = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faUtensils\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 22\n  }, this);\n\n  const iconDifficulty = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faDumbbell\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 28\n  }, this); // The useEffect() hook fires any time that the component is rendered.\n  // An empty array is passed as the second argument so that the effect only fires once.\n\n\n  useEffect(() => {\n    getAllRecipes();\n  }, []);\n\n  function getAllRecipes() {\n    axios.get(\"http://localhost:8080/api/recipes\").then(response => {\n      setRecipes(response.data); // update a new state\n\n      console.log(response.data);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: recipes.map(recipe => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"card-img-top\",\n                src: Baked,\n                alt: \"baked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: recipe.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row text-muted\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm\",\n                    children: [iconMeal, \" \", recipe.meal, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 73\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm\",\n                    children: [iconDifficulty, \" \", recipe.difficulty]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)\n          }, recipe.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getAllRecipes()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Homepage, \"9E4mzVyE6RbdCChEVOq8zknzLAc=\");\n\n_c = Homepage;\nexport default Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/Linh/Documents/programmar/Project/recipe/src/main/webapp/my-recipes/src/components/Homepage.js"],"names":["React","useEffect","useState","axios","Baked","FontAwesomeIcon","faDumbbell","faUtensils","Homepage","recipes","setRecipes","id","title","meal","difficulty","steps","iconMeal","iconDifficulty","getAllRecipes","get","then","response","data","console","log","map","recipe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,mCAArC;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAEhB;AACA;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAC;AACpCS,IAAAA,EAAE,EAAE,EADgC;AAEpCC,IAAAA,KAAK,EAAE,EAF6B;AAGpCC,IAAAA,IAAI,EAAE,EAH8B;AAIpCC,IAAAA,UAAU,EAAE,EAJwB;AAKpCC,IAAAA,KAAK,EAAE;AAL6B,GAAD,CAAD,CAAtC;;AAQA,QAAMC,QAAQ,gBAAG,QAAC,eAAD;AAAiB,IAAA,IAAI,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAjB;;AACA,QAAMU,cAAc,gBAAG,QAAC,eAAD;AAAiB,IAAA,IAAI,EAAEX;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAvB,CAbgB,CAehB;AACA;;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,aAAT,GAAyB;AACrBf,IAAAA,KAAK,CAACgB,GAAN,CAAU,mCAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,UAAU,CAACW,QAAQ,CAACC,IAAV,CAAV,CADc,CACa;;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACH,KAJL;AAMA,wBACI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAA,kBACKb,OAAO,CAACgB,GAAR,CAAYC,MAAM,IAAI;AACnB,8BACI;AAAK,YAAA,SAAS,EAAE,UAAhB;AAAA,mCACI;AAAK,cAAA,SAAS,EAAE,MAAhB;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAE,cAAhB;AAAgC,gBAAA,GAAG,EAAEtB,KAArC;AAA4C,gBAAA,GAAG,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,gBAAA,SAAS,EAAE,WAAhB;AAAA,wCACI;AAAI,kBAAA,SAAS,EAAE,YAAf;AAAA,4BAA8BsB,MAAM,CAACd;AAArC;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAE,QAAhB;AAAA,+BACKI,QADL,OACgBU,MAAM,CAACb,IADvB,eAC4B;AAAA;AAAA;AAAA;AAAA,4BAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAK,oBAAA,SAAS,EAAE,QAAhB;AAAA,+BACKI,cADL,OACsBS,MAAM,CAACZ,UAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAiCY,MAAM,CAACf,EAAxC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAkBH,SAnBA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;;AAED,sBACI;AAAA,cACKO,aAAa;AADlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7DQV,Q;;KAAAA,Q;AA+DT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport \"./css/Homepage.css\";\nimport Baked from \"./img/lm4rceme60edquisbnwb.jpeg\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faDumbbell, faUtensils} from \"@fortawesome/free-solid-svg-icons\";\n\n\nfunction Homepage() {\n\n    // Store the recipes in a state variable.\n    // We are passing an empty array as the default value.\n    const [recipes, setRecipes] = useState([{\n        id: '',\n        title: '',\n        meal: '',\n        difficulty: '',\n        steps: ''\n    }]);\n\n    const iconMeal = <FontAwesomeIcon icon={faUtensils}/>;\n    const iconDifficulty = <FontAwesomeIcon icon={faDumbbell}/>;\n\n    // The useEffect() hook fires any time that the component is rendered.\n    // An empty array is passed as the second argument so that the effect only fires once.\n    useEffect(() => {\n        getAllRecipes()\n    }, []);\n\n    function getAllRecipes() {\n        axios.get(\"http://localhost:8080/api/recipes\")\n            .then(response => {\n                setRecipes(response.data); // update a new state\n                console.log(response.data);\n            });\n\n        return (\n            <div className={\"container\"}>\n                <div className={\"row\"}>\n                    {recipes.map(recipe => {\n                        return (\n                            <div className={\"col-sm-3\"} key={recipe.id}>\n                                <div className={\"card\"}>\n                                    <img className={\"card-img-top\"} src={Baked} alt={\"baked\"}/>\n                                    <div className={\"card-body\"}>\n                                        <h5 className={\"card-title\"}>{recipe.title}</h5>\n                                        <div className=\"row text-muted\">\n                                            <div className={\"col-sm\"}>\n                                                {iconMeal} {recipe.meal}<br/>\n                                            </div>\n                                            <div className={\"col-sm\"}>\n                                                {iconDifficulty} {recipe.difficulty}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {getAllRecipes()}\n        </div>\n    )\n}\n\nexport default Homepage;"]},"metadata":{},"sourceType":"module"}