{"ast":null,"code":"var _jsxFileName = \"/Users/Linh/Documents/Programmar/Project/recipe/src/main/webapp/my-recipes/src/components/Test.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Control from \"react-select/src/components/Control\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet renderCount = 0;\n\nfunction Test() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm({\n    defaultValues: {\n      firstName: \"firstName\"\n    }\n  });\n  const {\n    dirtyFields\n  } = useFormState({\n    control\n  });\n\n  const onSubmit = data => console.log(data);\n\n  renderCount++;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Headers, {\n      renderCount: renderCount,\n      description: \"Performing, flexible and extensible forms with easy-to-use validation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\"),\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), dirtyFields.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Field is dirty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"X/e/qPYli1AzFQPCqDAEpJcGtkc=\", true, function () {\n  return [useForm];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/Linh/Documents/Programmar/Project/recipe/src/main/webapp/my-recipes/src/components/Test.js"],"names":["React","useForm","Control","renderCount","Test","register","handleSubmit","control","defaultValues","firstName","dirtyFields","useFormState","onSubmit","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAGA,IAAIC,WAAW,GAAG,CAAlB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAsCN,OAAO,CAAC;AAChDO,IAAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAE;AADA;AADiC,GAAD,CAAnD;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAkBC,YAAY,CAAC;AACjCJ,IAAAA;AADiC,GAAD,CAApC;;AAGA,QAAMK,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AACAV,EAAAA,WAAW;AAEX,sBACI;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,WAAW,EAAEA,WADjB;AAEI,MAAA,WAAW,EAAC;AAFhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAM,MAAA,QAAQ,EAAEG,YAAY,CAACM,QAAD,CAA5B;AAAA,8BACI,sBAAWP,QAAQ,CAAC,WAAD,CAAnB;AAAkC,QAAA,WAAW,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKK,WAAW,CAACD,SAAZ,iBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF9B,eAGI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA1BQL,I;UACuCH,O;;;KADvCG,I;AA4BT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport Control from \"react-select/src/components/Control\";\n\n\nlet renderCount = 0;\n\nfunction Test() {\n    const { register, handleSubmit, control } = useForm({\n        defaultValues: {\n            firstName: \"firstName\"\n        }\n    });\n    const { dirtyFields } = useFormState({\n        control\n    });\n    const onSubmit = (data) => console.log(data);\n    renderCount++;\n\n    return (\n        <div>\n            <Headers\n                renderCount={renderCount}\n                description=\"Performing, flexible and extensible forms with easy-to-use validation.\"\n            />\n\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <input {...register(\"firstName\")} placeholder=\"First Name\" />\n                {dirtyFields.firstName && <p>Field is dirty.</p>}\n                <input type=\"submit\" />\n            </form>\n        </div>\n    );\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}