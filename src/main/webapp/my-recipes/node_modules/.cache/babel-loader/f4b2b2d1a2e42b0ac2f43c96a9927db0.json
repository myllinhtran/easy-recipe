{"ast":null,"code":"var _jsxFileName = \"/Users/Linh/Documents/programmar/Project/recipe/src/main/webapp/my-recipes/src/components/NewRecipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport './css/NewRecipe.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewRecipe() {\n  _s();\n\n  const units = [\"unit\", \"g\", \"kg\", \"l\", \"ml\"];\n  const meals = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n  const difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n  const ingredient = {\n    id: '',\n    name: ''\n  };\n  const [ingredientName, setIngredientName] = useState('');\n  const [ingredientAmount, setIngredientAmount] = useState('');\n  const [ingredientUnit, setIngredientUnit] = useState('');\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [ingredients, getIngredients] = useState([ingredient]);\n  const [ingredientList, setIngredientList] = useState([]);\n  const [ingredientId, setIngredientId] = useState(0);\n  useEffect(() => {\n    getAllIngredients();\n  }, []);\n\n  function getAllIngredients() {\n    axios.get(\"http://localhost:8080/api/ingredients\").then(response => {\n      getIngredients(response.data);\n    });\n  }\n\n  function handleOnChangeIngredient(event) {\n    const ingredientName = event.target.value;\n    setIngredientName(ingredientName);\n    let ingredientId = ingredients.find(ingredient => ingredient.name === ingredientName);\n    setIngredientId(ingredientId.id);\n  }\n\n  function handleOnChangeAmount(event) {\n    const ingredientAmount = event.target.value;\n\n    if (ingredientAmount === \"\") {\n      let message = \"Please pick an amount needed\";\n      console.log(message);\n    }\n  }\n\n  function handleAddedIngredient() {\n    const ingredientDetail = {\n      'id': ingredientId,\n      'name': ingredientName,\n      'amount': ingredientAmount,\n      'unit': ingredientUnit\n    };\n    console.log(ingredientDetail);\n    return setIngredientList(ingredientList => [...ingredientList, ingredientDetail]);\n  }\n\n  function onSubmit(data) {\n    const recipe = {\n      title: data.title,\n      meal: data.meal,\n      difficulty: data.difficulty,\n      steps: data.steps,\n      ingredientSet: ingredientList\n    };\n    console.log(recipe);\n    axios.post(\"http://localhost:8080/api/recipes\", recipe).then(response => {\n      console.log(response.data);\n    }).catch(error => console.log(error)).then(refreshPage);\n  }\n\n  function refreshPage() {\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-recipe\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-recipe-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"title\",\n        ref: register({\n          required: \"Please give a title for your recipe\",\n          maxLength: {\n            value: 50,\n            message: \"Your title has exceeded the maximum length\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            name: \"meal\",\n            defaultValue: \"Select\",\n            ref: register({\n              required: true,\n              pattern: {\n                message: \"Please select a meal\"\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Select\",\n              disabled: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), meals.map((meal, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: meal\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), errors.meal && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.meal.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            name: \"difficulty\",\n            defaultValue: \"Select\",\n            ref: register({\n              required: true,\n              pattern: {\n                message: \"Please select a level of difficulty\"\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Select\",\n              disabled: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), difficulties.map((difficulty, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: difficulty\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), errors.difficulty && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.difficulty.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        name: \"ingredients\",\n        defaultValue: \"Select\",\n        onChange: handleOnChangeIngredient,\n        ref: register({\n          required: true,\n          pattern: {\n            message: \"Please select your ingredients\"\n          }\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select\",\n          disabled: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), ingredients.map(ingredient => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: ingredient.name\n          }, ingredient.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"amount\",\n            onChange: e => setIngredientAmount(e.target.value),\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), errors.amount && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please add the amount needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"unit\",\n            id: \"unitDataList\",\n            list: \"unitDatalistOptions\",\n            onChange: e => setIngredientUnit(e.target.value),\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"unitDatalistOptions\",\n            children: units.map((unit, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: unit\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), errors.unit && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please choose a unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          value: \"Add\",\n          onClick: handleAddedIngredient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          ref: register,\n          children: ingredientList.map((ingredient, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [ingredient.name, \" - \", ingredient.amount, \" \", ingredient.unit]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-recipe-bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Steps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        name: \"steps\",\n        rows: \"8\",\n        ref: register({\n          required: \"Please add the instruction for your recipe\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), errors.steps && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.steps.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewRecipe, \"Y9SiI1K/DFcHKMIELQIIkX/y+Xw=\", false, function () {\n  return [useForm];\n});\n\n_c = NewRecipe;\nexport default NewRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewRecipe\");","map":{"version":3,"sources":["/Users/Linh/Documents/programmar/Project/recipe/src/main/webapp/my-recipes/src/components/NewRecipe.js"],"names":["React","useEffect","useState","useForm","axios","NewRecipe","units","meals","difficulties","ingredient","id","name","ingredientName","setIngredientName","ingredientAmount","setIngredientAmount","ingredientUnit","setIngredientUnit","register","handleSubmit","errors","ingredients","getIngredients","ingredientList","setIngredientList","ingredientId","setIngredientId","getAllIngredients","get","then","response","data","handleOnChangeIngredient","event","target","value","find","handleOnChangeAmount","message","console","log","handleAddedIngredient","ingredientDetail","onSubmit","recipe","title","meal","difficulty","steps","ingredientSet","post","catch","error","refreshPage","window","location","reload","required","maxLength","pattern","map","index","e","amount","unit"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useForm} from 'react-hook-form';\nimport './css/NewRecipe.css';\nimport axios from \"axios\";\n\n\nfunction NewRecipe() {\n\n    const units = [\n        \"unit\",\n        \"g\",\n        \"kg\",\n        \"l\",\n        \"ml\"\n    ];\n    const meals = [\n        \"Breakfast\",\n        \"Lunch\",\n        \"Dinner\"\n    ];\n    const difficulties = [\n        \"Easy\",\n        \"Medium\",\n        \"Hard\"\n    ];\n    const ingredient = {\n        id: '',\n        name: ''\n    };\n\n    const [ingredientName, setIngredientName] = useState('');\n    const [ingredientAmount, setIngredientAmount] = useState('');\n    const [ingredientUnit, setIngredientUnit] = useState('');\n\n    const {register, handleSubmit, errors} = useForm();\n\n    const [ingredients, getIngredients] = useState([ingredient]);\n    const [ingredientList, setIngredientList] = useState([]);\n    const [ingredientId, setIngredientId] = useState(0);\n\n    useEffect(() => {\n        getAllIngredients();\n    }, []);\n\n    function getAllIngredients() {\n        axios.get(\"http://localhost:8080/api/ingredients\")\n            .then(response => {\n                getIngredients(response.data);\n            })\n    }\n\n    function handleOnChangeIngredient(event) {\n        const ingredientName = event.target.value;\n        setIngredientName(ingredientName);\n\n        let ingredientId = ingredients.find((ingredient) => ingredient.name === ingredientName);\n        setIngredientId(ingredientId.id);\n    }\n\n    function handleOnChangeAmount(event) {\n        const ingredientAmount = event.target.value;\n\n        if (ingredientAmount === \"\") {\n            let message = \"Please pick an amount needed\";\n            console.log(message);\n        }\n    }\n\n    function handleAddedIngredient() {\n\n        const ingredientDetail = {\n            'id': ingredientId,\n            'name': ingredientName,\n            'amount': ingredientAmount,\n            'unit': ingredientUnit\n        };\n        console.log(ingredientDetail);\n        return setIngredientList(ingredientList => [...ingredientList, ingredientDetail]);\n    }\n\n    function onSubmit(data) {\n        const recipe = {\n            title: data.title,\n            meal: data.meal,\n            difficulty: data.difficulty,\n            steps: data.steps,\n            ingredientSet: ingredientList\n        };\n        console.log(recipe);\n\n        axios.post(\"http://localhost:8080/api/recipes\", recipe)\n            .then(response => {\n                console.log(response.data);\n            }).catch(error => console.log(error))\n            .then(refreshPage);\n    }\n\n    function refreshPage() {\n        window.location.reload();\n    }\n\n    return (\n        <form className={\"form-recipe\"} onSubmit={handleSubmit(onSubmit)}>\n            <div className={\"form-recipe-head\"}>\n                <label>Title</label>\n                <input className={\"form-control\"} name={\"title\"}\n                       ref={register({\n                           required: \"Please give a title for your recipe\",\n                           maxLength: {\n                               value: 50,\n                               message: \"Your title has exceeded the maximum length\"\n                           }\n                       })}/>\n                {errors.title && <p>{errors.title.message}</p>}\n\n                <div className={\"row\"}>\n\n                    <div className={\"col\"}>\n                        <label>Meal</label>\n                        <select className={\"form-select\"} name={\"meal\"}\n                                defaultValue={\"Select\"}\n                                ref={register({\n                                    required: true,\n                                    pattern: {\n                                        message: \"Please select a meal\"\n                                    }\n                                })}>\n                            <option value={\"Select\"} disabled>Select</option>\n                            {meals.map((meal, index) => {\n                                return (\n                                    <option key={index}>{meal}</option>\n                                )\n                            })}\n                        </select>\n                        {errors.meal && <p>{errors.meal.message}</p>}\n                    </div>\n\n                    <div className={\"col\"}>\n                        <label>Difficulty</label>\n                        <select className={\"form-select\"} name={\"difficulty\"}\n                                defaultValue={\"Select\"}\n                                ref={register({\n                                    required: true,\n                                    pattern: {\n                                        message: \"Please select a level of difficulty\"\n                                    }\n                                })}>\n                            <option value={\"Select\"} disabled>Select</option>\n                            {difficulties.map((difficulty, index) => {\n                                return (\n                                    <option key={index}>{difficulty}</option>\n                                )\n                            })}\n                        </select>\n                        {errors.difficulty && <p>{errors.difficulty.message}</p>}\n                    </div>\n                </div>\n\n                <label>Ingredients</label>\n                <select className={\"form-select\"} name={\"ingredients\"}\n                        defaultValue={\"Select\"} onChange={handleOnChangeIngredient}\n                        ref={register({\n                            required: true,\n                            pattern: {\n                                message: \"Please select your ingredients\"\n                            }\n                        })}>\n                    <option value={\"Select\"} disabled>Select</option>\n                    {ingredients.map(ingredient => {\n                        return (\n                            <option key={ingredient.id}>{ingredient.name}</option>\n                        );\n                    })}\n                </select>\n\n                <div className={\"row\"}>\n                    <div className={\"col\"}>\n                        <label>Amount</label>\n                        <input className={\"form-control\"} name={\"amount\"}\n                               onChange={e => setIngredientAmount(e.target.value)}\n                               ref={register({\n                                   required: true\n                               })}/>\n                        {errors.amount && <p>Please add the amount needed</p>}\n                    </div>\n                    <div className={\"col\"}>\n                        <label>Unit</label>\n                        <input className={\"form-control\"} name={\"unit\"} id={\"unitDataList\"}\n                               list={\"unitDatalistOptions\"} onChange={e => setIngredientUnit(e.target.value)}\n                               ref={register({\n                                   required: true\n                               })}/>\n                        <datalist id={\"unitDatalistOptions\"}>\n                            {units.map((unit, index) => {\n                                return (\n                                    <option key={index} value={unit}/>\n                                )\n                            })}\n                        </datalist>\n                        {errors.unit && <p>Please choose a unit</p>}\n                    </div>\n                </div>\n                <div className={\"row\"}>\n                    <input className={\"btn btn-primary\"} type={\"button\"} value={\"Add\"} onClick={handleAddedIngredient}/>\n                </div>\n                <div className={\"row\"}>\n                    <ul className={\"list-group list-group-flush\"} ref={register}>\n                        {ingredientList.map((ingredient, index) => {\n                            return (\n                                <li className={\"list-group-item\"} key={index}>\n                                    {ingredient.name} - {ingredient.amount} {ingredient.unit}\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n            <div className={\"form-recipe-bottom\"}>\n                <label>Steps</label>\n                <textarea className={\"form-control\"} name={\"steps\"} rows=\"8\" ref={register({\n                    required: \"Please add the instruction for your recipe\"\n                })}/>\n                {errors.steps && <p>{errors.steps.message}</p>}\n                <input type={\"submit\"}/>\n            </div>\n            \n        </form>\n    )\n}\n\nexport default NewRecipe;"]},"metadata":{},"sourceType":"module"}