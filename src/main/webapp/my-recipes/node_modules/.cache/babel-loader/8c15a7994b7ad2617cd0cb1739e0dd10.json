{"ast":null,"code":"var _jsxFileName = \"/Users/Linh/Documents/Programmar/Project/recipe/src/main/webapp/my-recipes/src/components/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport './css/Recipe.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Recipe() {\n  _s();\n\n  const units = [\"unit\", \"g\", \"kg\", \"l\", \"ml\"];\n  const meals = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n  const difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n  const ingredient = {\n    id: '',\n    name: ''\n  };\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [ingredients, getIngredients] = useState([ingredient]);\n  const [ingredientId, setIngredientId] = useState(0);\n  const [ingredientName, setIngredientName] = useState('');\n  const [ingredientList, setIngredientList] = useState([]);\n  const [title] = useState('');\n  const [meal, setMeal] = useState('');\n  const [difficulty, setDifficulty] = useState('');\n  const [ingredientAmount, setIngredientAmount] = useState('');\n  const [ingredientUnit, setIngredientUnit] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [mealError, setMealError] = useState('');\n  const [difficultyError, setDifficultyError] = useState('');\n  const [ingredientNameError, setIngredientNameError] = useState('');\n  const [amountError, setAmountError] = useState('');\n  const [unitError, setUnitError] = useState('');\n  useEffect(() => {\n    getAllIngredients();\n  }, []);\n\n  function getAllIngredients() {\n    axios.get(\"http://localhost:8080/api/ingredients\").then(response => {\n      getIngredients(response.data);\n    });\n  }\n\n  function handleOnChangeMeal(event) {\n    const meal = event.target.value;\n    setMeal(meal);\n  }\n\n  function handleOnChangeDifficulty(event) {\n    const difficulty = event.target.value;\n    setDifficulty(difficulty);\n  }\n\n  function handleOnChangeIngredient(event) {\n    const ingredientName = event.target.value;\n    setIngredientName(ingredientName);\n    let ingredientId = ingredients.find(ingredient => ingredient.name === ingredientName);\n    setIngredientId(ingredientId.id);\n  }\n\n  function handleOnChangeAmount(event) {\n    const ingredientAmount = event.target.value;\n    setIngredientAmount(ingredientAmount);\n  }\n\n  function recipeValidation() {\n    if (title === \"\") {\n      setTitleError(\"Please add a title\");\n    } else setTitleError(null);\n\n    if (meal === \"\") {\n      setMealError(\"Please pick a meal\");\n    } else setMealError(null);\n\n    if (difficulty === \"\") {\n      setDifficultyError(\"Please pick the level of difficulty\");\n    } else setDifficultyError(null);\n  }\n\n  function ingredientValidation() {\n    if (ingredientName === \"\") {\n      setIngredientNameError(\"Please pick an ingredient\");\n    } else setIngredientNameError(null);\n\n    if (ingredientAmount === \"\") {\n      setAmountError(\"Please add an amount needed\");\n    } else setAmountError(null);\n\n    if (ingredientUnit === \"\") {\n      setUnitError(\"Please pick the unit\");\n    } else setUnitError(null);\n  }\n\n  function handleAddedIngredient() {\n    ingredientValidation();\n    const ingredientDetail = {\n      'id': ingredientId,\n      'name': ingredientName,\n      'amount': ingredientAmount,\n      'unit': ingredientUnit\n    };\n\n    if (ingredientAmount !== \"\" && ingredientUnit !== \"\") {\n      return setIngredientList(ingredientList => [...ingredientList, ingredientDetail]);\n    }\n  }\n\n  function onSubmit(data) {\n    recipeValidation();\n    const recipe = {\n      title: data.title,\n      meal: data.meal,\n      difficulty: data.difficulty,\n      steps: data.steps,\n      ingredientSet: ingredientList\n    };\n    console.log(recipe);\n    axios.post(\"http://localhost:8080/api/recipes\", recipe).then(response => {\n      console.log(response.data);\n    }).catch(error => console.log(error)).then(refreshPage);\n  }\n\n  function refreshPage() {\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-recipe\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-recipe-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"title\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), titleError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: titleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"meal\",\n            children: \"Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            defaultValue: \"Select\",\n            name: \"meal\",\n            onChange: handleOnChangeMeal,\n            ref: register({\n              required: true\n            }),\n            children: [\"d  \", /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Select\",\n              disabled: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 30\n            }, this), meals.map((meal, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: meal\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), mealError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mealError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"difficulty\",\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            defaultValue: \"Select\",\n            name: \"difficulty\",\n            onChange: handleOnChangeDifficulty,\n            ref: register({\n              required: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Select\",\n              disabled: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), difficulties.map((difficulty, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: difficulty\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), difficultyError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: difficultyError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredients\",\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        name: \"ingredients\",\n        defaultValue: \"Select\",\n        onChange: handleOnChangeIngredient,\n        ref: register({\n          required: true\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select\",\n          disabled: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), ingredients.map(ingredient => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: ingredient.name\n          }, ingredient.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), ingredientNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ingredientNameError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"amount\",\n            type: \"number\",\n            onChange: handleOnChangeAmount,\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), amountError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: amountError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"unit\",\n            id: \"unitDataList\",\n            list: \"unitDatalistOptions\",\n            onChange: e => setIngredientUnit(e.target.value),\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"unitDatalistOptions\",\n            children: units.map((unit, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: unit\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), unitError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: unitError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          value: \"Add\",\n          onClick: handleAddedIngredient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          ref: register,\n          children: ingredientList.map((ingredient, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [ingredient.name, \" - \", ingredient.amount, \" \", ingredient.unit]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-recipe-bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Steps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        name: \"steps\",\n        rows: \"6\",\n        ref: register({\n          required: \"Please add the instruction for your recipe\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), errors.steps && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.steps.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Recipe, \"RovvdvWv7arzqF5QdLct/Hew3zo=\", false, function () {\n  return [useForm];\n});\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/Linh/Documents/Programmar/Project/recipe/src/main/webapp/my-recipes/src/components/Recipe.js"],"names":["React","useEffect","useState","useForm","axios","Recipe","units","meals","difficulties","ingredient","id","name","register","handleSubmit","errors","ingredients","getIngredients","ingredientId","setIngredientId","ingredientName","setIngredientName","ingredientList","setIngredientList","title","meal","setMeal","difficulty","setDifficulty","ingredientAmount","setIngredientAmount","ingredientUnit","setIngredientUnit","titleError","setTitleError","mealError","setMealError","difficultyError","setDifficultyError","ingredientNameError","setIngredientNameError","amountError","setAmountError","unitError","setUnitError","getAllIngredients","get","then","response","data","handleOnChangeMeal","event","target","value","handleOnChangeDifficulty","handleOnChangeIngredient","find","handleOnChangeAmount","recipeValidation","ingredientValidation","handleAddedIngredient","ingredientDetail","onSubmit","recipe","steps","ingredientSet","console","log","post","catch","error","refreshPage","window","location","reload","required","map","index","e","unit","amount","message"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useForm} from 'react-hook-form';\nimport './css/Recipe.css';\nimport axios from \"axios\";\n\n\nfunction Recipe() {\n\n    const units = [\n        \"unit\",\n        \"g\",\n        \"kg\",\n        \"l\",\n        \"ml\"\n    ];\n    const meals = [\n        \"Breakfast\",\n        \"Lunch\",\n        \"Dinner\"\n    ];\n    const difficulties = [\n        \"Easy\",\n        \"Medium\",\n        \"Hard\"\n    ];\n    const ingredient = {\n        id: '',\n        name: ''\n    };\n\n    const {register, handleSubmit, errors} = useForm();\n\n    const [ingredients, getIngredients] = useState([ingredient]);\n    const [ingredientId, setIngredientId] = useState(0);\n    const [ingredientName, setIngredientName] = useState('');\n    const [ingredientList, setIngredientList] = useState([]);\n\n    const [title] = useState('');\n    const [meal, setMeal] = useState('');\n    const [difficulty, setDifficulty] = useState('');\n    const [ingredientAmount, setIngredientAmount] = useState('');\n    const [ingredientUnit, setIngredientUnit] = useState('');\n\n    const [titleError, setTitleError] = useState('');\n    const [mealError, setMealError] = useState('');\n    const [difficultyError, setDifficultyError] = useState('');\n    const [ingredientNameError, setIngredientNameError] = useState('');\n    const [amountError, setAmountError] = useState('');\n    const [unitError, setUnitError] = useState('');\n\n    useEffect(() => {\n        getAllIngredients();\n    }, []);\n\n    function getAllIngredients() {\n        axios.get(\"http://localhost:8080/api/ingredients\")\n            .then(response => {\n                getIngredients(response.data);\n            });\n    }\n\n    function handleOnChangeMeal(event) {\n        const meal = event.target.value;\n        setMeal(meal);\n    }\n\n    function handleOnChangeDifficulty(event) {\n        const difficulty = event.target.value;\n        setDifficulty(difficulty);\n    }\n\n    function handleOnChangeIngredient(event) {\n        const ingredientName = event.target.value;\n        setIngredientName(ingredientName);\n\n        let ingredientId = ingredients.find((ingredient) => ingredient.name === ingredientName);\n        setIngredientId(ingredientId.id);\n    }\n\n    function handleOnChangeAmount(event) {\n        const ingredientAmount = event.target.value;\n        setIngredientAmount(ingredientAmount);\n    }\n\n    function recipeValidation() {\n        if (title === \"\") {\n            setTitleError(\"Please add a title\")\n        } else setTitleError(null);\n        if (meal === \"\") {\n            setMealError(\"Please pick a meal\");\n        } else setMealError(null);\n        if (difficulty === \"\") {\n            setDifficultyError(\"Please pick the level of difficulty\");\n        } else setDifficultyError(null);\n    }\n\n    function ingredientValidation() {\n        if (ingredientName === \"\") {\n            setIngredientNameError(\"Please pick an ingredient\");\n        } else setIngredientNameError(null);\n        if (ingredientAmount === \"\") {\n            setAmountError(\"Please add an amount needed\");\n        } else setAmountError(null);\n        if (ingredientUnit === \"\") {\n            setUnitError(\"Please pick the unit\");\n        } else setUnitError(null);\n    }\n\n    function handleAddedIngredient() {\n        ingredientValidation();\n        const ingredientDetail = {\n            'id': ingredientId,\n            'name': ingredientName,\n            'amount': ingredientAmount,\n            'unit': ingredientUnit\n        };\n        if (ingredientAmount !== \"\" && ingredientUnit !== \"\") {\n            return setIngredientList(ingredientList => [...ingredientList, ingredientDetail]);\n        }\n    }\n\n    function onSubmit(data) {\n\n        recipeValidation();\n\n        const recipe = {\n            title: data.title,\n            meal: data.meal,\n            difficulty: data.difficulty,\n            steps: data.steps,\n            ingredientSet: ingredientList\n        };\n        console.log(recipe);\n\n        axios.post(\"http://localhost:8080/api/recipes\", recipe)\n            .then(response => {\n                console.log(response.data);\n            }).catch(error => console.log(error))\n            .then(refreshPage);\n    }\n\n    function refreshPage() {\n        window.location.reload();\n    }\n\n    return (\n        <form className={\"form-recipe\"} onSubmit={handleSubmit(onSubmit)}>\n            <div className={\"form-recipe-head\"}>\n                <label htmlFor={\"title\"}>Title</label>\n                <input className={\"form-control\"}\n                       name={\"title\"}\n                       ref={register({\n                           required: true\n                       })}/>\n                {titleError && <p>{titleError}</p>}\n                <div className={\"row\"}>\n                    <div className={\"col\"}>\n                        <label htmlFor={\"meal\"}>Meal</label>\n                        <select className={\"form-select\"}\n                                defaultValue={\"Select\"}\n                                name={\"meal\"}\n                                onChange={handleOnChangeMeal}\n                                ref={register({\n                                    required: true\n                                })}>\n                          d  <option value={\"Select\"} disabled>Select</option>\n                            {meals.map((meal, index) => {\n                                return (<option key={index}>{meal}</option>)\n                            })}\n                        </select>\n                        {mealError && <p>{mealError}</p>}\n                    </div>\n                    <div className={\"col\"}>\n                        <label htmlFor={\"difficulty\"}>Difficulty</label>\n                        <select className={\"form-select\"}\n                                defaultValue={\"Select\"}\n                                name={\"difficulty\"}\n                                onChange={handleOnChangeDifficulty}\n                                ref={register({required: true})}>\n                            <option value={\"Select\"} disabled>Select</option>\n                            {difficulties.map((difficulty, index) => {\n                                return (\n                                    <option key={index}>{difficulty}</option>\n                                );\n                            })}\n                        </select>\n                        {difficultyError && <p>{difficultyError}</p>}\n                    </div>\n                </div>\n                <label htmlFor={\"ingredients\"}>Ingredients</label>\n                <select className={\"form-select\"}\n                        name={\"ingredients\"}\n                        defaultValue={\"Select\"}\n                        onChange={handleOnChangeIngredient}\n                        ref={register({required: true})}>\n                    <option value={\"Select\"} disabled>Select</option>\n                    {ingredients.map(ingredient => {\n                        return (\n                            <option key={ingredient.id}>{ingredient.name}</option>\n                        );\n                    })}\n                </select>\n                {ingredientNameError && <p>{ingredientNameError}</p>}\n                <div className={\"row\"}>\n                    <div className={\"col\"}>\n                        <label>Amount</label>\n                        <input className={\"form-control\"}\n                               name={\"amount\"}\n                               type={\"number\"}\n                               onChange={handleOnChangeAmount}\n                               ref={register({\n                                   required: true\n                               })}/>\n                        {amountError && <p>{amountError}</p>}\n                    </div>\n                    <div className={\"col\"}>\n                        <label>Unit</label>\n                        <input className={\"form-control\"}\n                               name={\"unit\"}\n                               id={\"unitDataList\"}\n                               list={\"unitDatalistOptions\"} onChange={e => setIngredientUnit(e.target.value)}\n                               ref={register({\n                                   required: true\n                               })}/>\n                        <datalist id={\"unitDatalistOptions\"}>\n                            {units.map((unit, index) => {\n                                return (\n                                    <option key={index} value={unit}/>\n                                )\n                            })}\n                        </datalist>\n                        {unitError && <p>{unitError}</p>}\n                    </div>\n                </div>\n                <div className={\"row\"}>\n                    <input className={\"btn btn-primary\"} type={\"button\"} value={\"Add\"}\n                           onClick={handleAddedIngredient}/>\n                </div>\n                <div className={\"row\"}>\n                    <ul className={\"list-group list-group-flush\"} ref={register}>\n                        {ingredientList.map((ingredient, index) => {\n                            return (\n                                <li className={\"list-group-item\"} key={index}>\n                                    {ingredient.name} - {ingredient.amount} {ingredient.unit}\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n            <div className={\"form-recipe-bottom\"}>\n                <label>Steps</label>\n                <textarea className={\"form-control\"} name={\"steps\"} rows=\"6\" ref={register({\n                    required: \"Please add the instruction for your recipe\"\n                })}/>\n                {errors.steps && <p>{errors.steps.message}</p>}\n                <input type={\"submit\"}/>\n            </div>\n        </form>\n    )\n}\n\nexport default Recipe;"]},"metadata":{},"sourceType":"module"}