{"ast":null,"code":"var _jsxFileName = \"/Users/Linh/Documents/programmar/Project/recipe/src/main/webapp/my-recipes/src/components/NewRecipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport './css/NewRecipe.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewRecipe() {\n  _s();\n\n  const units = [\"unit\", \"g\", \"kg\", \"l\", \"ml\"];\n  const meals = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n  const difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n  const [inputValue, setInputValue] = useState('');\n  const [ingredientName, setIngredientName] = useState('');\n  const [ingredientAmount, setIngredientAmount] = useState('');\n  const [ingredientUnit, setIngredientUnit] = useState('');\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [ingredients, getIngredients] = useState([{\n    id: '',\n    name: ''\n  }]);\n  const [ingredientList, setIngredientList] = useState([]);\n  useEffect(() => {\n    getAllIngredients();\n  }, []);\n\n  function getAllIngredients() {\n    axios.get(\"http://localhost:8080/api/ingredients\").then(response => {\n      getIngredients(response.data);\n      console.log(response.data);\n    });\n  }\n\n  function handleAddedIngredient() {\n    const ingredientDetail = {\n      'name': ingredientName,\n      'amount': ingredientAmount,\n      'unit': ingredientUnit\n    };\n    console.log(ingredientDetail);\n    return setIngredientList(ingredientList => [...ingredientList, ingredientDetail]);\n  }\n\n  function handleOnChange() {}\n\n  function onSubmit(data) {\n    const recipe = {\n      title: data.title,\n      meal: data.meal,\n      difficulty: data.difficulty,\n      steps: data.steps,\n      ingredients: data.ingredients\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-recipe\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-recipe-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"title\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            name: \"meal\",\n            ref: register,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), meals.map((meal, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: meal\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            name: \"difficulty\",\n            ref: register,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), difficulties.map((difficulty, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: difficulty\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"ingredients\",\n        id: \"recipeDataList\",\n        list: \"recipeDatalistOptions\",\n        placeholder: \"Type to search...\",\n        onChange: e => setIngredientName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"recipeDatalistOptions\",\n        children: ingredients.map(ingredient => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ingredient.name\n          }, ingredient.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"amount\",\n            onChange: e => setIngredientAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"unit\",\n            id: \"unitDataList\",\n            list: \"unitDatalistOptions\",\n            onChange: e => setIngredientUnit(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"unitDatalistOptions\",\n            children: units.map((unit, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: unit\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          value: \"Add\",\n          onClick: handleAddedIngredient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: ingredientList.map((ingredient, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [ingredient.name, \" - \", ingredient.amount, \" \", ingredient.unit]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-recipe-bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Steps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        name: \"steps\",\n        rows: \"16\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewRecipe, \"KQAnPCtlbbV7s0+yGDF/8Gq+fUM=\", false, function () {\n  return [useForm];\n});\n\n_c = NewRecipe;\nexport default NewRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewRecipe\");","map":{"version":3,"sources":["/Users/Linh/Documents/programmar/Project/recipe/src/main/webapp/my-recipes/src/components/NewRecipe.js"],"names":["React","useEffect","useState","useForm","axios","NewRecipe","units","meals","difficulties","inputValue","setInputValue","ingredientName","setIngredientName","ingredientAmount","setIngredientAmount","ingredientUnit","setIngredientUnit","register","handleSubmit","ingredients","getIngredients","id","name","ingredientList","setIngredientList","getAllIngredients","get","then","response","data","console","log","handleAddedIngredient","ingredientDetail","handleOnChange","onSubmit","recipe","title","meal","difficulty","steps","map","index","e","target","value","ingredient","unit","amount"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useForm} from 'react-hook-form';\nimport './css/NewRecipe.css';\nimport axios from \"axios\";\n\nfunction NewRecipe() {\n\n    const units = [\n        \"unit\",\n        \"g\",\n        \"kg\",\n        \"l\",\n        \"ml\"\n    ];\n    const meals = [\n        \"Breakfast\",\n        \"Lunch\",\n        \"Dinner\"\n    ];\n    const difficulties = [\n        \"Easy\",\n        \"Medium\",\n        \"Hard\"\n    ];\n\n    const [inputValue, setInputValue] = useState('');\n    const [ingredientName, setIngredientName] = useState('');\n    const [ingredientAmount, setIngredientAmount] = useState('');\n    const [ingredientUnit, setIngredientUnit] = useState('');\n\n    const {register, handleSubmit} = useForm();\n    const [ingredients, getIngredients] = useState([{\n        id: '',\n        name: ''\n    }]);\n    const [ingredientList, setIngredientList] = useState([]);\n\n    useEffect(() => {\n        getAllIngredients();\n    }, []);\n\n    function getAllIngredients() {\n        axios.get(\"http://localhost:8080/api/ingredients\")\n            .then(response => {\n                getIngredients(response.data);\n                console.log(response.data);\n            })\n    }\n\n    function handleAddedIngredient() {\n        const ingredientDetail = {\n            'name': ingredientName,\n            'amount': ingredientAmount,\n            'unit': ingredientUnit\n        };\n        console.log(ingredientDetail);\n        return setIngredientList(ingredientList => [...ingredientList, ingredientDetail]);\n    }\n\n    function handleOnChange() {\n        \n    }\n\n    function onSubmit(data) {\n\n        const recipe = {\n            title: data.title,\n            meal: data.meal,\n            difficulty: data.difficulty,\n            steps: data.steps,\n            ingredients: data.ingredients\n        };\n    }\n\n\n\n    return (\n        <form className={\"form-recipe\"} onSubmit={handleSubmit(onSubmit)}>\n            <div className={\"form-recipe-head\"}>\n                <label>Title</label>\n                <input className={\"form-control\"} name={\"title\"} ref={register}/>\n\n                <div className={\"row\"}>\n                    <div className={\"col\"}>\n                        <label>Meal</label>\n                        <select className={\"form-select\"} name={\"meal\"} ref={register}>\n                            <option>Select</option>\n                            {meals.map((meal, index) => {\n                                return (\n                                    <option key={index}>{meal}</option>\n                                )\n                            })}\n                        </select>\n                    </div>\n                    <div className={\"col\"}>\n                        <label>Difficulty</label>\n                        <select className={\"form-select\"} name={\"difficulty\"} ref={register}>\n                            <option>Select</option>\n                            {difficulties.map((difficulty, index) => {\n                                return (\n                                    <option key={index}>{difficulty}</option>\n                                )\n                            })}\n                        </select>\n                    </div>\n                </div>\n\n                <label>Ingredients</label>\n                <input className={\"form-control\"} name={\"ingredients\"} id={\"recipeDataList\"}\n                       list={\"recipeDatalistOptions\"}\n                       placeholder={\"Type to search...\"} onChange={e => setIngredientName(e.target.value)}/>\n                <datalist id={\"recipeDatalistOptions\"}>\n                    {ingredients.map(ingredient => {\n                        return (\n                            <option key={ingredient.id} value={ingredient.name}/>\n                        )\n                    })}\n                </datalist>\n\n                <div className={\"row\"}>\n                    <div className={\"col\"}>\n                        <label>Amount</label>\n                        <input className={\"form-control\"} name={\"amount\"} onChange={e => setIngredientAmount(e.target.value)}/>\n                    </div>\n                    <div className={\"col\"}>\n                        <label>Unit</label>\n                        <input className={\"form-control\"} name={\"unit\"} id={\"unitDataList\"}\n                               list={\"unitDatalistOptions\"} onChange={e => setIngredientUnit(e.target.value)}/>\n                        <datalist id={\"unitDatalistOptions\"}>\n                            {units.map((unit, index) => {\n                                return (\n                                    <option key={index} value={unit}/>\n                                )\n                            })}\n                        </datalist>\n                    </div>\n                </div>\n                <div className={\"row\"}>\n                    <input className={\"btn btn-primary\"} type={\"button\"} value={\"Add\"} onClick={handleAddedIngredient}/>\n                </div>\n                <div className={\"row\"}>\n                    <ul className={\"list-group list-group-flush\"}>\n                        {ingredientList.map((ingredient, index) => {\n                            return (\n                                <li className={\"list-group-item\"} key={index}>\n                                    {ingredient.name} - {ingredient.amount} {ingredient.unit}\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n            <div className={\"form-recipe-bottom\"}>\n                <label>Steps</label>\n                <textarea className={\"form-control\"} name={\"steps\"} rows=\"16\" ref={register}/>\n                <input type={\"submit\"}/>\n            </div>\n        </form>\n    )\n}\n\nexport default NewRecipe;"]},"metadata":{},"sourceType":"module"}