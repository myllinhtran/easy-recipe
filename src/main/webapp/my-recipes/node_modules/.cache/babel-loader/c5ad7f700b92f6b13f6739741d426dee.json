{"ast":null,"code":"var _jsxFileName = \"/Users/Linh/Documents/programmar/Project/recipe/src/main/webapp/my-recipes/src/components/Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport \"./css/Homepage.css\";\nimport Baked from \"./img/lm4rceme60edquisbnwb.jpeg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDumbbell, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Homepage() {\n  _s();\n\n  // Store the recipes in a state variable.\n  // We are passing an empty array as the default value.\n  const [recipes, setRecipes] = useState([{\n    id: '',\n    title: '',\n    meal: '',\n    difficulty: '',\n    steps: ''\n  }]); // The useEffect() hook fires any time that the component is rendered.\n  // An empty array is passed as the second argument so that the effect only fires once.\n\n  useEffect(() => {\n    getAllRecipes();\n  }, []);\n\n  function getAllRecipes() {\n    axios.get(\"http://localhost:8080/api/recipes\").then(response => {\n      setRecipes(response.data); // update a new state\n\n      console.log(response.data);\n    });\n  }\n\n  function displayNavBar() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Find your recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"new\",\n            className: \"btn btn-primary\",\n            children: \"New Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"my-recipes\",\n            className: \"btn btn-primary\",\n            children: \"My Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [displayNavBar(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card-img-top\",\n              src: Baked,\n              alt: \"baked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: recipe.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row text-muted\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm\",\n                  children: [iconMeal, \" \", recipe.meal, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 69\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm\",\n                  children: [iconDifficulty, \" \", recipe.difficulty]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Homepage, \"9E4mzVyE6RbdCChEVOq8zknzLAc=\");\n\n_c = Homepage;\nexport default Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/Linh/Documents/programmar/Project/recipe/src/main/webapp/my-recipes/src/components/Homepage.js"],"names":["React","useEffect","useState","axios","Baked","FontAwesomeIcon","faDumbbell","faUtensils","Homepage","recipes","setRecipes","id","title","meal","difficulty","steps","getAllRecipes","get","then","response","data","console","log","displayNavBar","map","recipe","iconMeal","iconDifficulty"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport \"./css/Homepage.css\";\nimport Baked from \"./img/lm4rceme60edquisbnwb.jpeg\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faDumbbell, faUtensils} from \"@fortawesome/free-solid-svg-icons\";\n\n\nfunction Homepage() {\n\n    // Store the recipes in a state variable.\n    // We are passing an empty array as the default value.\n    const [recipes, setRecipes] = useState([{\n        id: '',\n        title: '',\n        meal: '',\n        difficulty: '',\n        steps: ''\n    }]);\n\n    // The useEffect() hook fires any time that the component is rendered.\n    // An empty array is passed as the second argument so that the effect only fires once.\n    useEffect(() => {\n        getAllRecipes()\n    }, []);\n\n    function getAllRecipes() {\n        axios.get(\"http://localhost:8080/api/recipes\")\n            .then(response => {\n                setRecipes(response.data); // update a new state\n                console.log(response.data);\n            });\n    }\n\n    function displayNavBar() {\n        return (\n            <div className={\"nav-bar\"}>\n                <div className=\"card text-center\">\n                    <div className=\"card-body\">\n                        <h2 className=\"card-title\">Find your recipes</h2>\n                        <a href=\"new\" className=\"btn btn-primary\">New Recipe</a>\n                        <a href=\"my-recipes\" className=\"btn btn-primary\">My Recipes</a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={\"container-fluid\"}>\n            {displayNavBar()}\n            <div className={\"row\"}>\n                {recipes.map(recipe => {\n                    return (\n                        <div className={\"col-sm-2\"} key={recipe.id}>\n                            <div className={\"card\"}>\n                                <img className={\"card-img-top\"} src={Baked} alt={\"baked\"}/>\n                                <div className={\"card-body\"}>\n                                    <h5 className={\"card-title\"}>{recipe.title}</h5>\n                                    <div className=\"row text-muted\">\n                                        <div className={\"col-sm\"}>\n                                            {iconMeal} {recipe.meal}<br/>\n                                        </div>\n                                        <div className={\"col-sm\"}>\n                                            {iconDifficulty} {recipe.difficulty}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Homepage;"]},"metadata":{},"sourceType":"module"}